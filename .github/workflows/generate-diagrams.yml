name: Generate Diagrams from StarUML MDJ

on:
  push:
    branches:
      - main
    paths:
      - '**.mdj'

permissions:
  contents: write

jobs:
  generate-diagrams:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          token: ${{ github.token }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz libcairo2-dev libjpeg-dev libpango1.0-dev libgif-dev build-essential g++ jq

      - name: Install PlantUML
        run: |
          # Use PlantUML jar file instead of StarUML CLI
          sudo apt-get install -y default-jre
          mkdir -p ./tools
          cd ./tools
          wget -q https://github.com/plantuml/plantuml/releases/download/v1.2023.10/plantuml-1.2023.10.jar -O plantuml.jar
          echo "PlantUML downloaded successfully"

      - name: Generate Diagrams from MDJ
        run: |
          find . -name "*.mdj" | while read mdj_file; do
            output_dir="diagrams/$(dirname "${mdj_file#./}")"
            mkdir -p "$output_dir"
            
            # Extract JSON data from MDJ file
            echo "Processing $mdj_file"
            
            # MDJ files are essentially JSON, so we can extract diagrams
            # First, create a temporary directory for extracted data
            tmp_dir=$(mktemp -d)
            
            # Extract diagram data to PlantUML format
            # This is a simple example - you may need to adjust the jq queries based on your MDJ structure
            jq -r '.ownedElements[] | select(.name != null) | "
            @startuml
            title " + .name + "
            class " + .name + " {
              +attributes
              +methods()
            }
            @enduml
            "' "$mdj_file" > "$tmp_dir/diagram.puml" || echo "Failed to extract diagram from $mdj_file"
            
            # Generate diagram using PlantUML
            if [ -s "$tmp_dir/diagram.puml" ]; then
              java -jar ./tools/plantuml.jar -tpng "$tmp_dir/diagram.puml" -o "$output_dir"
              echo "Generated diagram for $mdj_file"
            else
              echo "No diagram data extracted from $mdj_file"
            fi
            
            # Clean up
            rm -rf "$tmp_dir"
          done

      - name: Commit and Push Generated Diagrams
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add diagrams/
          git commit -m "Generate diagrams from StarUML MDJ files" || echo "No changes to commit"
          git push origin HEAD:${GITHUB_REF} 